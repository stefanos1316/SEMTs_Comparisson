#!/bin/bash


#This script will execute and measure applications located inside this repo.

#Command-line parameters
#$1 -> Application's jar path for execution
#$2 -> Log files locations (full paht needed)
#$3 -> Give all the arguments that are necessary for the selected applications (command-line arguments num 2)


if [ "$#" -lt 2 ]; then
	echo "Illegal number of paramters"
fi

if [ "$1" == "-h" ] || [ "$1" == "-help" ]; then
	echo "$1 -> Application's jar path for execution"
	echo "$2 -> Log files locations (we suggest to use the 'results' directory found in our repository)"
	echo "$3 -> Give all the arguments that are necessary for the selected applications (command-line arguments num 2)"

fi

#Drive to power-cli directory
cd ../powerapi-cli/bin/

applicationsName=$(echo $1 | awk -F "/" '{print $NF}' | awk -F "." '{print $1}')

otherCommandLineArguments=$(echo ${@:3} | tr ' ' '_')

#echo $applicationsName
#echo $otherCommandLineArguments


#Creating new Directory for the log files
powerAPILogDirDate="$(date -u | sed -e 's/ /_/g')" 
powerAPILogDirName=$2/"PowerAPI_ALL_LOG_FILES_"$powerAPILogDirDate"_application_"$applicationsName"_arguments_"$otherCommandLineArguments
powerAPILogDirCreate="$(mkdir -p $powerAPILogDirName)"
eval=$powerAPILogDirCreate
echo "Log Directory $powerAPILogDirName is created"

#Initially we will execute the jar without measuring it since powerAPI requires durations to capture measurements
#This will help us to determine the duration and set it as a parameter to our script.


#######################################################################################################
#						TODO						      #
#######################################################################################################
echo "Receiving durations for $1 applications"
StartTime=$(date +"%s")
eval=$(java -jar $1 ${@:3})
EndTime=$(date +"%s") 
ElapsedTime=$((${EndTime}-${StartTime}))

#Exexcute task and retrieve measurements

retrieve_process_ID="$(pgrep java | awk -F' ' '{print $NF}')" 
launch_PowerAPI=$(./powerapi modules procfs-cpu-simple monitor --frequency 1000 --pids $retrieve_process_ID --agg max --console duration $ElapsedTime >> power_for_$applicationsName.txt)
eval=$(java -jar $1 ${@:3} ; sleep 1 ; $retrieve_process_ID ; $launch_PowerAPI) 

wait $(jobs -p)
echo "Done exeuting script all resutls can be found in $powerAPILogDirName"

#Move all the collected results in the proposer file
mv power_for_$applicationsName.txt $powerAPILogDirName

echo "Exiting..."
