#!/bin/bash

#This script will execute and measure applications located inside this repo.

if [ "$1" == "-h" ] || [ "$1" == "-help" ] || [ "$1" == "--help" ] || [ "$1" == "--h" ]; then
        echo "--arguments       If luanching a new application and arguments are needed (enclose all"
        echo "         	  arguments in double quotes \" and separate with spaces)"
        echo "--application     Full path where the application's source code is found"
        echo "--logs            Full path where all the log files form the monitoring process are stored"
        exit
fi

if [ "$#" -lt 3 ]; then
        echo "Illegal number of command line arguments"
        exit
fi

#Get all arguments
args=("$@")

#Get number of elements
ELEMENTS=${#args[@]}

#Initiallize parameters
arguments=0
applicationPath=0
logsPath="./"

# echo each element in array 
# for lQsds
for (( i=0;i<$ELEMENTS;++i)); do 

        case "${args[${i}]}" in
        ("--arguments") arguments=${args[i+1]} ;;
        ("--application") applicationPath="${args[i+1]}" ;;
        ("--logs") logsPath="${args[i+1]}" ;;
        esac
done


#Upon executing jolinar csv files are created which are confliciting with the script, that is why we remove them
rm -rf *.csv

applicationsName=$(echo applicationPath | awk -F "/" '{print $NF}' | awk -F "." '{print $1}')
otherCommandLineArguments=$(echo $arguments | tr ' ' '_')

#Creating new Directory for the log files
jolinarLogDirDate="$(date -u | sed -e 's/ /_/g')" 
jolinarLogDirName=$logs/"Jolinar_ALL_LOG_FILES_"$jolinarLogDirDate"_application_"$applicationsName"_arguments_"$otherCommandLineArguments
jolinarLogDirCreate="$(mkdir -p $jolinarLogDirName)"
eval=$jolinarLogDirCreate
echo "Log Directory $jolinarLogDirName is created"


#######################################################################################
##			FUNCTIONS						     ##
#######################################################################################
function plotGraph {
programName="$1"
echo "Here program stupid $programName"
while true; 
do
	sleep 1;
	tail -2 *-power.csv;
done | awk -F ";" '{for(i=1;i<=2;i++) a+=$1; b+=$2; c+=$3; print a, b, c; a=0; b=0; c=0; fflush()}' | feedGnuplot --lines --stream --title "$1 Power Consumption -- via Jolinar" --legend 0 "CPU" --legend 1 "Hard Disk" --legend 2 "Memory" --xlen 20 --ylabel 'Power (Watts)' --xlabel 'Time (seconds)' --exit
}

#######################################################################################
#runJolinar &

executeTasks=$( ./../../jolinar/2.5/jolinar/jolinar java -jar $applicationPath $arguments ) &
eval=$executeTasks &
plotGraph $applicationsName &
wait $(jobs -p)
echo "Done exeuting script all resutls can be found in $jolinarLogDirName"

#Move all the collected results in the proposer file
mv *.csv $jolinarLogDirName

echo "Exiting..."
